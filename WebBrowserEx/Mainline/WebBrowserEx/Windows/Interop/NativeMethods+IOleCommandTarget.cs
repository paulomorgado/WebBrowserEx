//-----------------------------------------------------------------------
// <copyright file="NativeMethods+IOleCommandTarget.cs" company="Paulo Morgado">
// Copyright (c) Paulo Morgado. All rights reserved.
// </copyright>
// <summary>
// IOleCommandTarget.
// </summary>
//-----------------------------------------------------------------------

namespace PauloMorgado.Windows.Interop
{
    using System;
    using System.Diagnostics.CodeAnalysis;
    using System.Runtime.InteropServices;
    using PauloMorgado.Windows.WebBrowser;

    /// <content>
    /// Native methods.
    /// </content>
    public static partial class NativeMethods
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.StyleCop.CSharp.DocumentationRules", "SA1600:ElementsMustBeDocumented", Justification = "Interop Code")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.StyleCop.CSharp.DocumentationRules", "SA1611:ElementParametersMustBeDocumented", Justification = "Interop Code")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.StyleCop.CSharp.DocumentationRules", "SA1615:ElementReturnValueMustBeDocumented", Justification = "Interop Code")]
        [Guid("B722BCCB-4E68-101B-A2BC-00AA00404770")]
        [ComImport]
        [ComVisible(true)]
        [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
        public interface IOleCommandTarget
        {
            /// <summary>
            /// Queries the object for the status of one or more commands generated by user interface events.
            /// </summary>
            [PreserveSig]
            [return: MarshalAs(UnmanagedType.I4)]
            int QueryStatus(
                [In] IntPtr pguidCmdGroup,
                ////ref object pguidCmdGroup,
                WebBrowserCommands cCmds,
                [In, Out] IntPtr prgCmds,
                ////[MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 1)] Interop.NativeMethods.OLECMD[] prgCmds,
                [In, Out] IntPtr pCmdText);

            /// <summary>
            /// Executes a specified command or displays help for a command.
            /// </summary>
            [PreserveSig]
            [return: MarshalAs(UnmanagedType.I4)]
            int Exec(
                [In] IntPtr pguidCmdGroup,
                ////ref object pguidCmdGroup,
                /*[In, MarshalAs(UnmanagedType.I4)]*/WebBrowserCommands nCmdID,
                WebBrowserCommandOptions nCmdexecopt,
                [In] IntPtr pvaIn,
                [In] IntPtr pvaOut);
        }
    }
}
